<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<context:annotation-config />
	<aop:aspectj-autoproxy/>
	<context:component-scan base-package="kr.co.animal"/>
	<mvc:annotation-driven/>

	<mvc:resources location="/resources/" mapping="/resources/**"/>
	
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"  value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<property name="order" value="0"/> 
	</bean>
	
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles-definitions.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="1"/>
	</bean>
	
	<!-- Datasource 설정 및 MyBatis 설정 : Datasource 설정은 MyBatis만을 위해 사용하는 것이 아니기 때문에 따로 설정한다.-->
	<!-- Datasource : JNDI -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/myora"/>
	</bean>
	
	<bean id="factorybean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:kr/co/animal/config/config.xml"/>
		<property name="mapperLocations" value="classpath*:kr/co/animal/mapper/*.xml"/>
	</bean>
	
	<!-- 내가 사용하려는 OpenSession, selectOne, selectList, insert, delete 같은 객체를 사용하기 위해 factoryBean을 ref로 생성자에 주입한다. -->
	<!-- Autowired로 사용함 -->
	<bean id="ss" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="factorybean"/>
	</bean>
	
</beans>
